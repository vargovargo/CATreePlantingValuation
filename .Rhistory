summarize(TotalCosts = sum(value),
`Number of Trees` = round((1000000*50)/sum(value),0)) %>%
inner_join(discount40) %>%
mutate(`Tons of Carbon/$1,000` = round(1000*(`Cummulative Carbon per Tree per Year`*0.000453592)/TotalCosts,1)) %>%
select(Region, Size, `Number of Trees`, `Tons of Carbon/$1,000`)
conversion2015 %>%
filter(Metric == "costsPerTree") %>%
group_by(Region, Size) %>%
summarize(TotalCosts = sum(value),
`Number of Trees` = round((1000000*50)/sum(value),0)) %>%
inner_join(discount40) %>%
mutate(`Tons of Carbon/$1,000` = round(1000*(`Cummulative Carbon per Tree per Year`*0.000453592)/TotalCosts,1)) %>%
select(Region, Size, `Number of Trees`, `Tons of Carbon/$1,000`) %>%
ggplot(aes(x=Region, y=`Tons of Carbon/$1,000`, color=Size, size=`Number of Trees`)) +geom_point()
shiny::runApp('GitHub/treePlanting/CATreePlantingValuation')
library(ggvis)
conversion2015 %>%
filter(Metric == "costsPerTree") %>%
group_by(Region, Size) %>%
summarize(TotalCosts = sum(value),
`Number of Trees` = round((1000000*50)/sum(value),0)) %>%
inner_join(discount40) %>%
mutate(`Tons of Carbon/$1,000` = round(1000*(`Cummulative Carbon per Tree per Year`*0.000453592)/TotalCosts,1)) %>%
select(Region, Size, `Number of Trees`, `Tons of Carbon/$1,000`) %>%
ggvis(~Region, ~`Tons of Carbon/$1,000`, size = ~`Number of Trees`, fill = ~Size) %>% layer_points()
conversion2015 %>%
filter(Metric == "costsPerTree") %>%
group_by(Region, Size) %>%
summarize(TotalCosts = sum(value),
`Number of Trees` = round((1000000*50)/sum(value),0)) %>%
inner_join(discount40) %>%
mutate(`Tons of Carbon/$1,000` = round(1000*(`Cummulative Carbon per Tree per Year`*0.000453592)/TotalCosts,1)) %>%
select(Region, Size, `Number of Trees`, `Tons of Carbon/$1,000`) %>%
ggvis(~Region, ~`Tons of Carbon/$1,000`, size = ~`Number of Trees`, fill = ~Size) %>% layer_points() %>%
add_tooltip(function(df) df$Region)
conversion2015 %>%
filter(Metric == "costsPerTree") %>%
group_by(Region, Size) %>%
summarize(TotalCosts = sum(value),
`Number of Trees` = round((1000000*50)/sum(value),0)) %>%
inner_join(discount40) %>%
mutate(`Tons of Carbon/$1,000` = round(1000*(`Cummulative Carbon per Tree per Year`*0.000453592)/TotalCosts,1)) %>%
select(Region, Size, `Number of Trees`, `Tons of Carbon/$1,000`) %>%
ggvis(~Region, ~`Tons of Carbon/$1,000`, size = ~`Number of Trees`, fill = ~Size) %>% layer_points() %>%
add_tooltip(function(df) df$Region br() df$Type)
conversion2015 %>%
filter(Metric == "costsPerTree") %>%
group_by(Region, Size) %>%
summarize(TotalCosts = sum(value),
`Number of Trees` = round((1000000*50)/sum(value),0)) %>%
inner_join(discount40) %>%
mutate(`Tons of Carbon/$1,000` = round(1000*(`Cummulative Carbon per Tree per Year`*0.000453592)/TotalCosts,1)) %>%
select(Region, Size, `Number of Trees`, `Tons of Carbon/$1,000`) %>%
ggvis(~Region, ~`Tons of Carbon/$1,000`, size = ~`Number of Trees`, fill = ~Size) %>% layer_points() %>%
add_tooltip(function(df) df$Region,
br(),
df$Type)
conversion2015 %>%
filter(Metric == "costsPerTree") %>%
group_by(Region, Size) %>%
summarize(TotalCosts = sum(value),
`Number of Trees` = round((1000000*50)/sum(value),0)) %>%
inner_join(discount40) %>%
mutate(`Tons of Carbon/$1,000` = round(1000*(`Cummulative Carbon per Tree per Year`*0.000453592)/TotalCosts,1)) %>%
select(Region, Size, `Number of Trees`, `Tons of Carbon/$1,000`) %>%
ggvis(~Region, ~`Tons of Carbon/$1,000`, size = ~`Number of Trees`, fill = ~Size) %>% layer_points() %>%
add_tooltip(function(df) df$Region,
br()
df$Type)
conversion2015 %>%
filter(Metric == "costsPerTree") %>%
group_by(Region, Size) %>%
summarize(TotalCosts = sum(value),
`Number of Trees` = round((1000000*50)/sum(value),0)) %>%
inner_join(discount40) %>%
mutate(`Tons of Carbon/$1,000` = round(1000*(`Cummulative Carbon per Tree per Year`*0.000453592)/TotalCosts,1)) %>%
select(Region, Size, `Number of Trees`, `Tons of Carbon/$1,000`) %>%
ggvis(~Region, ~`Tons of Carbon/$1,000`, size = ~`Number of Trees`, fill = ~Size) %>% layer_points() %>%
add_tooltip(function(df) df$Region  df$Type)
base <- mtcars %>% ggvis(x = ~wt, y = ~mpg) %>%
layer_points()
base %>% add_tooltip(all_values, "hover")
base %>% add_tooltip(all_values, "hover")
conversion2015 %>%
filter(Metric == "costsPerTree") %>%
group_by(Region, Size) %>%
summarize(TotalCosts = sum(value),
`Number of Trees` = round((1000000*50)/sum(value),0)) %>%
inner_join(discount40) %>%
mutate(`Tons of Carbon/$1,000` = round(1000*(`Cummulative Carbon per Tree per Year`*0.000453592)/TotalCosts,1)) %>%
select(Region, Size, `Number of Trees`, `Tons of Carbon/$1,000`) %>%
ggvis(~Region, ~`Tons of Carbon/$1,000`, size = ~`Number of Trees`, fill = ~Size) %>% layer_points() %>%
add_tooltip(df$Region )
rm(list = ls())
library(tidyverse)
library(ggvis)
conversion2015 <-  read.csv("~/GitHub/treePlanting/CATreePlantingValuation/raw.csv", header=T) %>%
gather(5:44, key = "Year", value = "value") %>%
mutate(Year = as.numeric(substring(Year, first=5)))
discountTable <-
inner_join({
filter({
conversion2015 %>%
spread(key = Metric, value = value)
} , Units == "dollars") %>%
select(Region, Size, Year, benefitsPerTree, costsPerTree)
},
{
filter({
conversion2015 %>%
spread(key = Metric, value = value)
}, Units == "pounds") %>%
select(Region, Size, Year,carbonSequestration)
})  %>%
mutate(`Net Benefit per Tree per Year` = (benefitsPerTree - costsPerTree)*(1/(1+(3.5/100))^(Year-1)),
`Carbon per Tree per Year` = (carbonSequestration)*(1/(1+(0/100))^(Year-1)))
discount40 <- discountTable  %>%
group_by(Region, Size) %>%
summarise(`Cummulative Net Benefit per Tree per Year` = sum(`Net Benefit per Tree per Year`),
`Cummulative Carbon per Tree per Year` = sum(`Carbon per Tree per Year`))
conversion2015 %>%
filter(Metric == "costsPerTree") %>%
group_by(Region, Size) %>%
summarize(TotalCosts = sum(value),
`Number of Trees` = round((1000000*50)/sum(value),0)) %>%
inner_join(discount40) %>%
mutate(`Tons of Carbon/$1,000` = round(1000*(`Cummulative Carbon per Tree per Year`*0.000453592)/TotalCosts,1)) %>%
select(Region, Size, `Number of Trees`, `Tons of Carbon/$1,000`) %>%
ggvis(~Region, ~`Tons of Carbon/$1,000`, size = ~`Number of Trees`, fill = ~Size) %>% layer_points() %>%
add_tooltip(function(df) df$Region)
rm(list = ls())
library(tidyverse)
library(ggvis)
conversion2015 <-  read.csv("~/GitHub/treePlanting/CATreePlantingValuation/raw.csv", header=T) %>%
gather(5:44, key = "Year", value = "value") %>%
mutate(Year = as.numeric(substring(Year, first=5)))
discountTable <-
inner_join({
filter({
conversion2015 %>%
spread(key = Metric, value = value)
} , Units == "dollars") %>%
select(Region, Type, Year, benefitsPerTree, costsPerTree)
},
{
filter({
conversion2015 %>%
spread(key = Metric, value = value)
}, Units == "pounds") %>%
select(Region, Type, Year,carbonSequestration)
})  %>%
mutate(`Net Benefit per Tree per Year` = (benefitsPerTree - costsPerTree)*(1/(1+(3.5/100))^(Year-1)),
`Carbon per Tree per Year` = (carbonSequestration)*(1/(1+(0/100))^(Year-1)))
discount40 <- discountTable  %>%
group_by(Region, Type) %>%
summarise(`Cummulative Net Benefit per Tree per Year` = sum(`Net Benefit per Tree per Year`),
`Cummulative Carbon per Tree per Year` = sum(`Carbon per Tree per Year`))
conversion2015 %>%
filter(Metric == "costsPerTree") %>%
group_by(Region, Type) %>%
summarize(TotalCosts = sum(value),
`Number of Trees` = round((1000000*50)/sum(value),0)) %>%
inner_join(discount40) %>%
mutate(`Tons of Carbon/$1,000` = round(1000*(`Cummulative Carbon per Tree per Year`*0.000453592)/TotalCosts,1)) %>%
select(Region, Type, `Number of Trees`, `Tons of Carbon/$1,000`) %>%
ggvis(~Region, ~`Tons of Carbon/$1,000`, size = ~`Number of Trees`, fill = ~Type) %>% layer_points() %>%
add_tooltip(function(df) df$Region)
conversion2015 %>%
filter(Metric == "costsPerTree") %>%
group_by(Region, Type) %>%
summarize(TotalCosts = sum(value),
`Number of Trees` = round((1000000*50)/sum(value),0)) %>%
inner_join(discount40) %>%
mutate(`Tons of Carbon/$1,000` = round(1000*(`Cummulative Carbon per Tree per Year`*0.000453592)/TotalCosts,1)) %>%
select(Region, Type, `Number of Trees`, `Tons of Carbon/$1,000`) %>%
ggvis( ~`Number of Trees`, ~`Tons of Carbon/$1,000`, size =Region, size = ~Type) %>% layer_points() %>%
add_tooltip(function(df) df$Region)
conversion2015 %>%
filter(Metric == "costsPerTree") %>%
group_by(Region, Type) %>%
summarize(TotalCosts = sum(value),
`Number of Trees` = round((1000000*50)/sum(value),0)) %>%
inner_join(discount40) %>%
mutate(`Tons of Carbon/$1,000` = round(1000*(`Cummulative Carbon per Tree per Year`*0.000453592)/TotalCosts,1)) %>%
select(Region, Type, `Number of Trees`, `Tons of Carbon/$1,000`) %>%
ggvis( ~`Number of Trees`, ~`Tons of Carbon/$1,000`, size = ~Region, size = ~Type) %>% layer_points() %>%
add_tooltip(function(df) df$Region)
conversion2015 %>%
filter(Metric == "costsPerTree") %>%
group_by(Region, Type) %>%
summarize(TotalCosts = sum(value),
`Number of Trees` = round((1000000*50)/sum(value),0)) %>%
inner_join(discount40) %>%
mutate(`Tons of Carbon/$1,000` = round(1000*(`Cummulative Carbon per Tree per Year`*0.000453592)/TotalCosts,1)) %>%
select(Region, Type, `Number of Trees`, `Tons of Carbon/$1,000`) %>%
ggvis( ~`Number of Trees`, ~`Tons of Carbon/$1,000`, fill = ~Region, size = ~Type) %>% layer_points() %>%
add_tooltip(function(df) df$Region)
conversion2015 %>%
filter(Metric == "costsPerTree") %>%
group_by(Region, Type) %>%
summarize(TotalCosts = sum(value),
`Number of Trees` = round((1000000*50)/sum(value),0)) %>%
inner_join(discount40) %>%
mutate(`Tons of Carbon/$1,000` = round(1000*(`Cummulative Carbon per Tree per Year`*0.000453592)/TotalCosts,1)) %>%
select(Region, Type, `Number of Trees`, `Tons of Carbon/$1,000`) %>%
ggvis( ~`Number of Trees`, ~`Tons of Carbon/$1,000`, fill = ~Region, shape = ~Type) %>% layer_points() %>%
add_tooltip(function(df) df$Region)
conversion2015 %>%
filter(Metric == "costsPerTree") %>%
group_by(Region, Type) %>%
summarize(TotalCosts = sum(value),
`Number of Trees` = round((1000000*50)/sum(value),0)) %>%
inner_join(discount40) %>%
mutate(`Tons of Carbon/$1,000` = round(1000*(`Cummulative Carbon per Tree per Year`*0.000453592)/TotalCosts,1)) %>%
select(Region, Type, `Number of Trees`, `Tons of Carbon/$1,000`) %>%
ggvis( ~`Number of Trees`, ~`Tons of Carbon/$1,000`, fill = ~Region, shape = ~Type) %>% layer_points() %>%
add_tooltip(function(df) paste0("Current invetment buys "df$`Number of Trees`/1000," thousand trees and captures ", df$`Tons of Carbon/$1,000`," tons of carbon/$1,000 after 40 years"))
conversion2015 %>%
filter(Metric == "costsPerTree") %>%
group_by(Region, Type) %>%
summarize(TotalCosts = sum(value),
`Number of Trees` = round((1000000*50)/sum(value),0)) %>%
inner_join(discount40) %>%
mutate(`Tons of Carbon/$1,000` = round(1000*(`Cummulative Carbon per Tree per Year`*0.000453592)/TotalCosts,1)) %>%
select(Region, Type, `Number of Trees`, `Tons of Carbon/$1,000`) %>%
ggvis( ~`Number of Trees`, ~`Tons of Carbon/$1,000`, fill = ~Region, shape = ~Type) %>% layer_points() %>%
add_tooltip(function(df) paste0("Current invetment buys ",df$`Number of Trees`/1000," thousand trees and captures ", df$`Tons of Carbon/$1,000`," tons of carbon/$1,000 after 40 years"))
conversion2015 %>%
filter(Metric == "costsPerTree") %>%
group_by(Region, Type) %>%
summarize(TotalCosts = sum(value),
`Number of Trees` = round((1000000*50)/sum(value),0)) %>%
inner_join(discount40) %>%
mutate(`Tons of Carbon/$1,000` = round(1000*(`Cummulative Carbon per Tree per Year`*0.000453592)/TotalCosts,1)) %>%
select(Region, Type, `Number of Trees`, `Tons of Carbon/$1,000`) %>%
ggvis( ~`Number of Trees`, ~`Tons of Carbon/$1,000`, fill = ~Region, shape = ~Type) %>% layer_points() %>%
add_tooltip(function(df) paste0("Current invetment buys ",round(df$`Number of Trees`/1000,0)," thousand trees and captures ", df$`Tons of Carbon/$1,000`," tons of carbon/$1,000 after 40 years"))
conversion2015 %>%
filter(Metric == "costsPerTree") %>%
group_by(Region, Type) %>%
summarize(TotalCosts = sum(value),
`Number of Trees` = round((1000000*50)/sum(value),0)) %>%
inner_join(discount40) %>%
mutate(`Tons of Carbon/$1,000` = round(1000*(`Cummulative Carbon per Tree per Year`*0.000453592)/TotalCosts,1)) %>%
select(Region, Type, `Number of Trees`, `Tons of Carbon/$1,000`) %>%
ggvis( ~`Number of Trees`, ~`Tons of Carbon/$1,000`, fill = ~Region, shape = ~Type) %>% layer_points() %>%
add_tooltip(function(df) paste0("Current investment in the ",df$Region," buys ",round(df$`Number of Trees`/1000,0)," thousand ",df$Type," trees and captures ", df$`Tons of Carbon/$1,000`," tons of carbon/$1,000 after 40 years"))
conversion2015 %>%
filter(Metric == "costsPerTree") %>%
group_by(Region, Type) %>%
summarize(TotalCosts = sum(value),
`Number of Trees` = round((1000000*50)/sum(value),0)) %>%
inner_join(discount40) %>%
mutate(`Tons of Carbon/$1,000` = round(1000*(`Cummulative Carbon per Tree per Year`*0.000453592)/TotalCosts,1)) %>%
select(Region, Type, `Number of Trees`, `Tons of Carbon/$1,000`) %>%
ggvis( ~`Number of Trees`, ~`Tons of Carbon/$1,000`, fill = ~Region, shape = ~Type) %>% layer_points() %>%
add_legend(scales = "shape", properties = legend_props(legend = list(y = 200)))%>%
add_tooltip(function(df) paste0("Current investment in the ",df$Region," buys ",round(df$`Number of Trees`/1000,0)," thousand ",df$Type," trees and captures ", df$`Tons of Carbon/$1,000`," tons of carbon/$1,000 after 40 years"))
conversion2015 %>%
filter(Metric == "costsPerTree") %>%
group_by(Region, Type) %>%
summarize(TotalCosts = sum(value),
`Number of Trees` = round((1000000*50)/sum(value),0)) %>%
inner_join(discount40) %>%
mutate(`Tons of Carbon/$1,000` = round(1000*(`Cummulative Carbon per Tree per Year`*0.000453592)/TotalCosts,1)) %>%
select(Region, Type, `Number of Trees`, `Tons of Carbon/$1,000`) %>%
ggvis( ~`Number of Trees`, ~`Tons of Carbon/$1,000`, fill = ~Region, shape = ~Type) %>% layer_points() %>%
add_legend(scales = "Type", properties = legend_props(legend = list(y = 200)))%>%
add_tooltip(function(df) paste0("Current investment in the ",df$Region," buys ",round(df$`Number of Trees`/1000,0)," thousand ",df$Type," trees and captures ", df$`Tons of Carbon/$1,000`," tons of carbon/$1,000 after 40 years"))
conversion2015 %>%
filter(Metric == "costsPerTree") %>%
group_by(Region, Type) %>%
summarize(TotalCosts = sum(value),
`Number of Trees` = round((1000000*50)/sum(value),0)) %>%
inner_join(discount40) %>%
mutate(`Tons of Carbon/$1,000` = round(1000*(`Cummulative Carbon per Tree per Year`*0.000453592)/TotalCosts,1)) %>%
select(Region, Type, `Number of Trees`, `Tons of Carbon/$1,000`) %>%
ggvis( ~`Number of Trees`, ~`Tons of Carbon/$1,000`, fill = ~Region, shape = ~Type) %>% layer_points() %>%
add_legend(scales = "fill", properties = legend_props(legend = list(y = 200)))%>%
add_tooltip(function(df) paste0("Current investment in the ",df$Region," buys ",round(df$`Number of Trees`/1000,0)," thousand ",df$Type," trees and captures ", df$`Tons of Carbon/$1,000`," tons of carbon/$1,000 after 40 years"))
conversion2015 %>%
filter(Metric == "costsPerTree") %>%
group_by(Region, Type) %>%
summarize(TotalCosts = sum(value),
`Number of Trees` = round((1000000*50)/sum(value),0)) %>%
inner_join(discount40) %>%
mutate(`Tons of Carbon/$1,000` = round(1000*(`Cummulative Carbon per Tree per Year`*0.000453592)/TotalCosts,1)) %>%
select(Region, Type, `Number of Trees`, `Tons of Carbon/$1,000`) %>%
ggvis( ~`Number of Trees`, ~`Tons of Carbon/$1,000`, fill = ~Region, shape = ~Type) %>% layer_points() %>%
add_legend(c("size", "fill"))%>%
add_tooltip(function(df) paste0("Current investment in the ",df$Region," buys ",round(df$`Number of Trees`/1000,0)," thousand ",df$Type," trees and captures ", df$`Tons of Carbon/$1,000`," tons of carbon/$1,000 after 40 years"))
conversion2015 %>%
filter(Metric == "costsPerTree") %>%
group_by(Region, Type) %>%
summarize(TotalCosts = sum(value),
`Number of Trees` = round((1000000*50)/sum(value),0)) %>%
inner_join(discount40) %>%
mutate(`Tons of Carbon/$1,000` = round(1000*(`Cummulative Carbon per Tree per Year`*0.000453592)/TotalCosts,1)) %>%
select(Region, Type, `Number of Trees`, `Tons of Carbon/$1,000`) %>%
ggvis( ~`Number of Trees`, ~`Tons of Carbon/$1,000`, fill = ~Region, shape = ~Type) %>% layer_points() %>%
add_legend("shape", properties = legend_props(legend = list(y = 100)))  %>%
add_tooltip(function(df) paste0("Current investment in the ",df$Region," buys ",round(df$`Number of Trees`/1000,0)," thousand ",df$Type," trees and captures ", df$`Tons of Carbon/$1,000`," tons of carbon/$1,000 after 40 years"))
conversion2015 %>%
filter(Metric == "costsPerTree") %>%
group_by(Region, Type) %>%
summarize(TotalCosts = sum(value),
`Number of Trees` = round((1000000*50)/sum(value),0)) %>%
inner_join(discount40) %>%
mutate(`Tons of Carbon/$1,000` = round(1000*(`Cummulative Carbon per Tree per Year`*0.000453592)/TotalCosts,1)) %>%
select(Region, Type, `Number of Trees`, `Tons of Carbon/$1,000`) %>%
ggvis( ~`Number of Trees`, ~`Tons of Carbon/$1,000`, fill = ~Region, shape = ~Type) %>% layer_points()  %>%
add_tooltip(function(df) paste0("Current investment in the ",df$Region," buys ",round(df$`Number of Trees`/1000,0)," thousand ",df$Type," trees and captures ", df$`Tons of Carbon/$1,000`," tons of carbon/$1,000 after 40 years")) %>%
add_legend("shape", properties = legend_props(legend = list(y = 100)))
conversion2015 %>%
filter(Metric == "costsPerTree") %>%
group_by(Region, Type) %>%
summarize(TotalCosts = sum(value),
`Number of Trees` = round((1000000*50)/sum(value),0)) %>%
inner_join(discount40) %>%
mutate(`Tons of Carbon/$1,000` = round(1000*(`Cummulative Carbon per Tree per Year`*0.000453592)/TotalCosts,1)) %>%
select(Region, Type, `Number of Trees`, `Tons of Carbon/$1,000`) %>%
ggvis( ~`Number of Trees`, ~`Tons of Carbon/$1,000`, fill = ~Region, shape = ~Type) %>% layer_points()  %>%
add_legend("shape", properties = legend_props(legend = list(y = 100)))
conversion2015 %>%
filter(Metric == "costsPerTree") %>%
group_by(Region, Type) %>%
summarize(TotalCosts = sum(value),
`Number of Trees` = round((1000000*50)/sum(value),0)) %>%
inner_join(discount40) %>%
mutate(`Tons of Carbon/$1,000` = round(1000*(`Cummulative Carbon per Tree per Year`*0.000453592)/TotalCosts,1)) %>%
select(Region, Type, `Number of Trees`, `Tons of Carbon/$1,000`) %>%
ggvis( ~`Number of Trees`, ~`Tons of Carbon/$1,000`, fill = ~Region, shape = ~Type) %>% layer_points()  %>%
add_legend("shape", properties = legend_props(legend = list(y = 120)))
add_tooltip(function(df) paste0("Current investment in the ",df$Region," buys ",round(df$`Number of Trees`/1000,0)," thousand ",df$Type," trees and captures ", df$`Tons of Carbon/$1,000`," tons of carbon/$1,000 after 40 years")) %>%
set_options(duration = 0)
conversion2015 %>%
filter(Metric == "costsPerTree") %>%
group_by(Region, Type) %>%
summarize(TotalCosts = sum(value),
`Number of Trees` = round((1000000*50)/sum(value),0)) %>%
inner_join(discount40) %>%
mutate(`Tons of Carbon/$1,000` = round(1000*(`Cummulative Carbon per Tree per Year`*0.000453592)/TotalCosts,1)) %>%
select(Region, Type, `Number of Trees`, `Tons of Carbon/$1,000`) %>%
ggvis( ~`Number of Trees`, ~`Tons of Carbon/$1,000`, fill = ~Region, shape = ~Type) %>% layer_points()  %>%
add_legend("shape", properties = legend_props(legend = list(y = 120))) %>%
add_tooltip(function(df) paste0("Current investment in the ",df$Region," buys ",round(df$`Number of Trees`/1000,0)," thousand ",df$Type," trees and captures ", df$`Tons of Carbon/$1,000`," tons of carbon/$1,000 after 40 years")) %>%
set_options(duration = 0)
runApp('GitHub/treePlanting/CATreePlantingValuation')
#
# This is a Shiny web application. You can run the application by clicking
# the 'Run App' button above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#
library(shiny)
library(tidyverse)
library(DT)
library(ggvis)
options(DT.options = list(pageLength = 21, language = list(search = 'Filter:')))
# Define UI for application that draws a histogram
ui <- fluidPage(
# Application title
titlePanel("California Tree Planting Valuation Dashboard"),
# Sidebar with a slider input for number of bins
sidebarLayout(
sidebarPanel(
sliderInput("investment",
"Millions of dollars invested",
min = 0,
max = 100,
value = 50),
sliderInput("socDisRate",
"Social Discount Rate",
min = 0,
max = 10,
value = 3.5,step = 0.5),
sliderInput("carDisRate",
"Carbon Discount Rate",
min = 0,
max = 10,
value = 0, step = 0.5)
),
# Show a plot of the generated distribution
mainPanel(
tabsetPanel(type = "tabs",
tabPanel(title = "Introduction",  includeHTML("intro.html")),
tabPanel(title = "Bang Per Buck",  plotOutput('bpbPlot'),dataTableOutput('bpbDT')),
tabPanel(title = "Carbon Benefits", plotOutput('carbBene'), dataTableOutput('carbBeneDT')),
tabPanel(title = "Net $ Benefits", plotOutput('dollarBene'), dataTableOutput('dollarBeneDT'))
)
)
)
)
# Define server logic required to draw a histogram
server <- function(input, output) {
conversion2015 <- reactive({
read.csv("raw.csv", header=T) %>%
gather(5:44, key = "Year", value = "value") %>%
mutate(Year = as.numeric(substring(Year, first=5)))
})
discountTable <- reactive({
inner_join({
filter({
conversion2015() %>%
spread(key = Metric, value = value)
} , Units == "dollars") %>%
select(Region, Type, Year, benefitsPerTree, costsPerTree)
},
{
filter({
conversion2015() %>%
spread(key = Metric, value = value)
}, Units == "pounds") %>%
select(Region, Type, Year,carbonSequestration)
})  %>%
mutate(`Net Benefit per Tree per Year` = (benefitsPerTree - costsPerTree)*(1/(1+(input$socDisRate/100))^(Year-1)),
`Carbon per Tree per Year` = (carbonSequestration)*(1/(1+(input$carDisRate/100))^(Year-1)))
})
plotData <- reactive({
Regions <- factor(c("Southwest desert", "Inland Empire","Northern California Coast","Southern California Coast","Temperate Interior West",  "Inland Valley (San Juaquin Valley)"),
levels=c("Southwest desert",
"Inland Empire",
"Northern California Coast",
"Southern California Coast",
"Temperate Interior West",
"Inland Valley (San Juaquin Valley)"))
Types <- factor(c("Small", "Med", "Large","Conifer"), levels=c("Small", "Med", "Large","Conifer"))
temp <- conversion2015() %>%
filter(Metric == "costsPerTree") %>%
group_by(Region, Type) %>%
summarize(TotalCosts = sum(value),
`Number of Trees` = round((1000000*input$investment)/sum(value),0)) %>%
select(Region, Type, `Number of Trees`) %>%
left_join(discountTable())
plotDataTemp <- data.frame()
for(region in Regions){
for(type in Types){
new <- temp %>% filter(Region == region & Type == type) %>%
mutate(carbonChart = cumsum(`Carbon per Tree per Year`)*0.000453592*`Number of Trees`,
dollarsChart = cumsum(`Net Benefit per Tree per Year`)*`Number of Trees`)
# set the name of my new variable and bind the new data to it
if(exists("plotDataTemp")){
plotDataTemp <- bind_rows(plotDataTemp, new)
}else{
plotDataTemp <- new
}
}
}
return(plotDataTemp)
})
output$bpbDT <- renderDataTable({
discount40 <- discountTable() %>%
group_by(Region, Type) %>%
summarise(`Cummulative Net Benefit per Tree per Year` = sum(`Net Benefit per Tree per Year`),
`Cummulative Carbon per Tree per Year` = sum(`Carbon per Tree per Year`))
conversion2015() %>%
filter(Metric == "costsPerTree") %>%
group_by(Region, Type) %>%
summarize(TotalCosts = sum(value),
`Number of Trees` = round((1000000*input$investment)/sum(value),0)) %>%
inner_join(discount40) %>%
mutate(`Tons of Carbon/$1,000` = round(1000*(`Cummulative Carbon per Tree per Year`*0.000453592)/TotalCosts,3)) %>%
select(Region, Type, `Number of Trees`, `Tons of Carbon/$1,000`)
})
output$bpbPlot <- renderPlot({
discount40 <- discountTable() %>%
group_by(Region, Type) %>%
summarise(`Cummulative Net Benefit per Tree per Year` = sum(`Net Benefit per Tree per Year`),
`Cummulative Carbon per Tree per Year` = sum(`Carbon per Tree per Year`))
conversion2015() %>%
filter(Metric == "costsPerTree") %>%
group_by(Region, Type) %>%
summarize(TotalCosts = sum(value),
`Number of Trees` = round((1000000*input$investment)/sum(value),0)) %>%
inner_join(discount40) %>%
mutate(`Tons of Carbon/$1,000` = round(1000*(`Cummulative Carbon per Tree per Year`*0.000453592)/TotalCosts,3)) %>%
select(Region, Type, `Number of Trees`, `Tons of Carbon/$1,000`) %>%
ggvis( ~`Number of Trees`, ~`Tons of Carbon/$1,000`, fill = ~Region, shape = ~Type) %>% layer_points()  %>%
add_legend("shape", properties = legend_props(legend = list(y = 120))) %>%
add_tooltip(function(df) paste0("Current investment in the ",df$Region," buys ",round(df$`Number of Trees`/1000,0)," thousand ",df$Type," trees and captures ", df$`Tons of Carbon/$1,000`," tons of carbon/$1,000 after 40 years")) %>%
set_options(duration = 0)
})
output$carbBene <- renderPlot({
ggplot(plotData(),aes(x=Year, y=carbonChart/1000, color=Type)) + geom_line(size=2) + facet_wrap(~ Region)  +
ylab(label = "Carbon Sequestered (1,000 Metric Tons)") + xlab("Years After Investment")
})
output$carbBeneDT <- renderDataTable({
plotData() %>%
filter(Year %in% c(5, 15, 40)) %>%
select(Region, Type, Year, carbonChart) %>%
mutate(carbonChart = round(carbonChart/1000,1)) %>%
spread(key = Year, value = carbonChart)
})
output$dollarBene <- renderPlot({
plotData() %>% ggplot(aes(x=Year, y=dollarsChart/1000000, color=Type)) + geom_line(size=2) + geom_hline(yintercept = 0, type=1, alpha=0.5) + facet_wrap(~Region) +
ylab(label = "Net Benefits (Millions $)") + xlab("Years After Investment")
})
output$dollarBeneDT <- renderDataTable({
plotData() %>%
filter(Year %in% c(5, 15, 40)) %>%
select(Region, Type, Year, dollarsChart) %>%
mutate(dollarsChart = round(dollarsChart/1000000,0)) %>%
spread(key = Year, value = dollarsChart)
})
}
# Run the application
shinyApp(ui = ui, server = server)
library(ggvis)
runApp('GitHub/treePlanting/CATreePlantingValuation')
runApp('GitHub/treePlanting/CATreePlantingValuation')
